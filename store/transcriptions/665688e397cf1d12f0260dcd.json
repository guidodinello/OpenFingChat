[
    {
        "text": " Bueno vamos a ir con las estructuras de repetición. Vamos a recordar un poco las distintas",
        "start": 0.0,
        "end": 22.8
    },
    {
        "text": " estructuras de control vistas hasta ahora, no solamente las de repetición sino también",
        "start": 22.8,
        "end": 27.88
    },
    {
        "text": " cuales, cuales dimos antes que las de repetición. Lo escuché, las de selección, estructuras",
        "start": 27.88,
        "end": 36.12
    },
    {
        "text": " de selección, ¿cuáles son? Elif y el case. If corresponde a selección simple, case",
        "start": 36.12,
        "end": 47.2
    },
    {
        "text": " corresponde a selección generalizada. Cuando corresponde el if, cuando tenés que elegir",
        "start": 47.2,
        "end": 54.72
    },
    {
        "text": " entre dos opciones dependiendo del cumplimiento de una condición, la cual es una expresión",
        "start": 54.72,
        "end": 63.32
    },
    {
        "text": " de tipo de huele. Si tengo tres o más alternativas lo que corresponde a sus arcades, ahí lo",
        "start": 63.32,
        "end": 72.36
    },
    {
        "text": " que hace es evaluar una expresión que no puede ser de que tipo, no puede ser real, puede",
        "start": 72.36,
        "end": 81.12
    },
    {
        "text": " ser inteser, puede ser char o puede ser bulia. Vamos a armarse adelante que puede ser cualquier",
        "start": 81.12,
        "end": 86.64
    },
    {
        "text": " valor de lo que vamos a llamar un tipo ordinal. Y dependiendo de cuál sea el valor que",
        "start": 86.64,
        "end": 92.88000000000001
    },
    {
        "text": " tome es que secuencias de instrucciones se va a ejecutar. En fripascal, opcionalmente",
        "start": 92.88000000000001,
        "end": 101.88000000000001
    },
    {
        "text": " que le podemos poner al case al final, un el de la misma manera que se lo podemos poner",
        "start": 101.88000000000001,
        "end": 106.72
    },
    {
        "text": " alif. Eso funciona en fripascal pero no funciona en el pascale estándar. Esas son las",
        "start": 106.72,
        "end": 113.24
    },
    {
        "text": " estructuras de selección. Luego empezamos a ver las estructuras repetitivas, también",
        "start": 113.24,
        "end": 119.08
    },
    {
        "text": " llamadas estructuras de iteración y la primera cual fue. El for. El for se utiliza cuando.",
        "start": 119.08,
        "end": 131.4
    },
    {
        "text": " Cuando sé la cantidad de veces exacta que quiero repetir la o las instrucciones que",
        "start": 131.4,
        "end": 141.04000000000002
    },
    {
        "text": " coloquemos dentro de su alcance. ¿Cómo se lleva la cuenta de cuántas veces ejecuta el for?",
        "start": 141.04000000000002,
        "end": 147.04000000000002
    },
    {
        "text": " Mediante una variable de control, que la mayoría de las veces es de que tipo. Intesar pero",
        "start": 147.04000000000002,
        "end": 155.72
    },
    {
        "text": " puede ser de cualquier tipo ordinal. Podría por ejemplo ser de tipo char. Entonces, yo",
        "start": 155.72,
        "end": 161.96
    },
    {
        "text": " uso la variable de control para marcar el comienzo y el final de la iteración. Y algo que",
        "start": 161.96,
        "end": 169.96
    },
    {
        "text": " tenemos vetado hacer que es. Modificar el valor de la variable de control, porque razón.",
        "start": 169.96,
        "end": 179.28
    },
    {
        "text": " Que pueden pasar cosas insólitas y no deseadas. Por ejemplo un bucle. La idea es no alterar",
        "start": 179.28,
        "end": 187.72
    },
    {
        "text": " la cantidad de veces que se va a ejecutar. Puede ser víctima de una falsificación de software.",
        "start": 187.72,
        "end": 195.2
    },
    {
        "text": " ¿Qué interesante?",
        "start": 195.2,
        "end": 197.28
    },
    {
        "text": " Bueno, queda claro el for. Y la clase pasada, cual vimos?",
        "start": 197.28,
        "end": 205.92000000000002
    },
    {
        "text": " O el. O el. O el. A diferencia del for, que pasa con la cantidad de veces que se ejecuta el",
        "start": 205.92000000000002,
        "end": 214.2
    },
    {
        "text": " why. No las sabes, se desconoce. E incluso podría pasar que sea cuántas veces.",
        "start": 214.2,
        "end": 222.04
    },
    {
        "text": " Ninguna. El why. También está sujeto al cumplimiento de que de una condición también de",
        "start": 222.12,
        "end": 230.76
    },
    {
        "text": " tipo bullyan. Le pasa lo mismo que alif. Y a casi tenemos peligro de caer en lo que llamamos",
        "start": 230.76,
        "end": 239.76
    },
    {
        "text": " un bucle, un loop, un ciclo intinito. Debemos asegurarnos que la condición del why en algún momento le",
        "start": 239.76,
        "end": 247.35999999999999
    },
    {
        "text": " pase que cosa. Termine que no se cumpla, que se haga falsa la condición. Porque si la",
        "start": 247.36,
        "end": 253.54000000000002
    },
    {
        "text": " condición nunca se hace falsa, entonces quedo eternamente atrapado dentro del why. Bueno, hoy vamos a",
        "start": 253.54000000000002,
        "end": 262.64
    },
    {
        "text": " ver la que no falta, que es el repeat, que se parece mucho más al why que al for. Podríamos decir",
        "start": 262.64,
        "end": 273.48
    },
    {
        "text": " que estas dos de alguna manera forman parte de una misma familia y el for está aparte.",
        "start": 273.48,
        "end": 278.64000000000004
    },
    {
        "text": " Entonces.",
        "start": 281.14000000000004,
        "end": 282.12
    },
    {
        "text": " Acá. La instrucción repita.",
        "start": 288.40000000000003,
        "end": 290.56
    },
    {
        "text": " Sí.",
        "start": 296.40000000000003,
        "end": 296.88
    },
    {
        "text": " Bueno, esto se se le. Sí. Bueno, vamos a empezar por ver la syntaxes de la instrucción",
        "start": 296.88,
        "end": 311.88
    },
    {
        "text": " repeat. Se coloca la palabra reservada repeat seguida de una instrucción. Y después de esa instrucción",
        "start": 311.88,
        "end": 325.64
    },
    {
        "text": " esta llave significa que opcionalmente yo puedo colocar que cosa más instrucciones. O sea que por",
        "start": 325.64,
        "end": 333.68
    },
    {
        "text": " lo menos voy a colocar una instrucción dentro del repeat. Al final se coloca la palabra reservada",
        "start": 333.68,
        "end": 341.84
    },
    {
        "text": " antil que en inglés quiere decir hasta y luego se pone una expresión que va a ser al igual que el",
        "start": 341.84,
        "end": 350.35999999999996
    },
    {
        "text": " why lilyf una condición de tipo bulier. Entonces, la idea del repeat es muy similar a la del why,",
        "start": 350.35999999999996,
        "end": 361.84
    },
    {
        "text": " pero con las siguientes diferencias. Primero, la condición no se pregunta al comienzo, sino que se",
        "start": 361.84,
        "end": 369.4
    },
    {
        "text": " pregunta al final. Esto tiene como consecuencia que por lo menos una vez yo voy a entrar. O sea que por lo menos",
        "start": 369.4,
        "end": 379.79999999999995
    },
    {
        "text": " una vez se va a ejecutarla o las instrucciones que colocamos dentro del repeat y recién después es que",
        "start": 379.79999999999995,
        "end": 388.15999999999997
    },
    {
        "text": " se va a devaluar la expresión. Dice repetir instrucción hasta que se cumpla la condición. O sea que",
        "start": 388.15999999999997,
        "end": 399.21999999999997
    },
    {
        "text": " yo me voy a mantener dentro del repeat mientras la condición sea como. Mientras sea falsa. Cuando se haga",
        "start": 399.22,
        "end": 407.54
    },
    {
        "text": " verdadera, ahí es que terminamos. Es un poco al revés de lo que pasa en el why. En el why mientras",
        "start": 407.54,
        "end": 418.18
    },
    {
        "text": " la expresión es verdadera yo entro. Y el why como mínimo se ejecuta cuantas veces.",
        "start": 418.18,
        "end": 425.58000000000004
    },
    {
        "text": " Cero ninguna podría no entrar. ¿Qué le va a pasar al repeat?",
        "start": 426.58,
        "end": 431.14
    },
    {
        "text": " Va a entrar por lo menos una vez. Entonces, ¿cuándo corresponde usar esta estructura? ¿Cuándo? Al igual que el",
        "start": 431.14,
        "end": 440.18
    },
    {
        "text": " why no sabemos de antemano cuántas veces se va a repetir, pero tenemos certeza de que por lo menos una vez se",
        "start": 440.18,
        "end": 448.21999999999997
    },
    {
        "text": " va a repetir.",
        "start": 455.58,
        "end": 456.58
    },
    {
        "text": " A ver, la misma materia, una y otra vez sin que el programa termina y decir que termina preguntas al",
        "start": 456.58,
        "end": 461.53999999999996
    },
    {
        "text": " hijo de ellos, pues bueno, voy a preguntarse, no possiblemente así. Si que se siente, es",
        "start": 461.53999999999996,
        "end": 465.97999999999996
    },
    {
        "text": " prohibido o está bien, con el que se dice que no se va a atrapar nunca, vuestra madre.",
        "start": 465.97999999999996,
        "end": 471.06
    },
    {
        "text": " No entendí la pregunta, perdón.",
        "start": 471.06,
        "end": 472.58
    },
    {
        "text": " ¿Tradá que te piste ciertamente y que el historión pueda consultar o al bajar datos ciertamente sin que lo",
        "start": 472.58,
        "end": 477.74
    },
    {
        "text": " va a pasar el tiempo?",
        "start": 477.74,
        "end": 478.58
    },
    {
        "text": " No, no tiene que ejecutarlo, porque no tiene que quedar aquí, quiero resultado.",
        "start": 478.58,
        "end": 482.58
    },
    {
        "text": " No, no te entendí.",
        "start": 482.58,
        "end": 483.58
    },
    {
        "text": " ¿O sea, ¿yo hago una herramienta que va a hacerlo y determina la función?",
        "start": 483.58,
        "end": 487.58
    },
    {
        "text": " Un programa.",
        "start": 487.58,
        "end": 488.58
    },
    {
        "text": " Un programa.",
        "start": 488.58,
        "end": 489.58
    },
    {
        "text": " Un programa.",
        "start": 489.58,
        "end": 490.58
    },
    {
        "text": " ¿A acercar a culo o su hogar?",
        "start": 490.58,
        "end": 491.58
    },
    {
        "text": " Sí.",
        "start": 491.58,
        "end": 492.58
    },
    {
        "text": " ¿Te va a pedir la posturutuario o a bajar resultados?",
        "start": 492.58,
        "end": 494.58
    },
    {
        "text": " Sí.",
        "start": 494.58,
        "end": 495.58
    },
    {
        "text": " Si yo lo enciérlo al punto de vista, de tal forma que la condición que pongo, la presión",
        "start": 495.58,
        "end": 501.86
    },
    {
        "text": " de proponominación no se cumpla nunca, de tal forma que eso sea cíclico y que siempre",
        "start": 501.86,
        "end": 506.09999999999997
    },
    {
        "text": " le pregunto el caso del usuario y a propiedad, donde lo que el programa no se le sea.",
        "start": 506.09999999999997,
        "end": 509.58
    },
    {
        "text": " ¿Te parece si lo charlamos después y me lo explica bien?",
        "start": 509.58,
        "end": 515.5799999999999
    },
    {
        "text": " Porque no me queda muy claro por dónde va.",
        "start": 515.5799999999999,
        "end": 518.5799999999999
    },
    {
        "text": " ¿Te pague si cuando me lo expliques ahí por ahí lo ve mejor?",
        "start": 518.5799999999999,
        "end": 523.5799999999999
    },
    {
        "text": " Bueno, seguimos.",
        "start": 523.5799999999999,
        "end": 525.5799999999999
    },
    {
        "text": " ¿Y acá?",
        "start": 525.5799999999999,
        "end": 529.5799999999999
    },
    {
        "text": " Lo tenemos escrito.",
        "start": 529.5799999999999,
        "end": 532.5799999999999
    },
    {
        "text": " No lleva vinent.",
        "start": 532.58,
        "end": 535.58
    },
    {
        "text": " El repeat hace las veces de vin y el antil hace las veces de n.",
        "start": 535.58,
        "end": 542.58
    },
    {
        "text": " Sea una o sea varias instrucciones.",
        "start": 542.58,
        "end": 545.58
    },
    {
        "text": " El repeat viene la ejecución hasta acá, entra hace una vez esta secuencia de instrucciones",
        "start": 545.58,
        "end": 551.7
    },
    {
        "text": " y ahí pregunta por la expresión.",
        "start": 551.7,
        "end": 555.58
    },
    {
        "text": " Si la expresión es falsa que pasa, vuelve al repeat y otra vez ejecuta.",
        "start": 555.58,
        "end": 563.58
    },
    {
        "text": " Va a terminar en el momento en que la expresión se haga verdadero.",
        "start": 563.58,
        "end": 568.58
    },
    {
        "text": " En ese sentido es, digamos, inversa a lo que pasa en el lugar.",
        "start": 568.58,
        "end": 573.58
    },
    {
        "text": " Función hay igual que cualquier instrucción.",
        "start": 579.58,
        "end": 582.58
    },
    {
        "text": " Todo esto se considera una instrucción compleja, todo el repeat entero.",
        "start": 582.58,
        "end": 587.58
    },
    {
        "text": " Si luego del antil vas a poner otra instrucción le pones el separador que es el punto y coma.",
        "start": 587.58,
        "end": 592.58
    },
    {
        "text": " O sea, aplica la misma regla de separación de instrucciones, que para cualquier instrucción.",
        "start": 592.58,
        "end": 598.58
    },
    {
        "text": " Y no tiene más misterio que este.",
        "start": 600.58,
        "end": 602.58
    },
    {
        "text": " Lo que hay que tener cuidado es a veces es muy fácil confundirse entre guay y repeat.",
        "start": 602.58,
        "end": 608.58
    },
    {
        "text": " El repeat solo cuando tengo absoluta certeza de que es necesario pasar por lo menos una vez por la secuencia de instrucciones.",
        "start": 608.58,
        "end": 617.58
    },
    {
        "text": " Y de hecho el comportamiento del repeat sería el mismo comportamiento que podríamos lograr con el guay de esta manera.",
        "start": 624.58,
        "end": 634.58
    },
    {
        "text": " Vengo ejecutando, llego al repeat.",
        "start": 635.58,
        "end": 639.58
    },
    {
        "text": " Ejecuto una vez la secuencia de instrucciones S y luego pregunto por la condición.",
        "start": 639.58,
        "end": 646.58
    },
    {
        "text": " Supongamos que la condición ya es verdadera la primera vez que pregunto por ella, ¿qué va a pasar?",
        "start": 648.58,
        "end": 653.58
    },
    {
        "text": " No, si la condición es verdadera termina sale.",
        "start": 655.58,
        "end": 658.58
    },
    {
        "text": " Se ejecuto una sola vez S.",
        "start": 658.58,
        "end": 661.58
    },
    {
        "text": " Miremos lo que pasa en el guay, en el mismo caso.",
        "start": 662.58,
        "end": 665.58
    },
    {
        "text": " Se ejecuta una vez S.",
        "start": 665.58,
        "end": 668.58
    },
    {
        "text": " ¿Vas bien?",
        "start": 668.58,
        "end": 670.58
    },
    {
        "text": " Y cuando preguntemos si se cumple la negación de la condición me va a decir que no.",
        "start": 670.58,
        "end": 675.58
    },
    {
        "text": " Porque acá me dice que sí, entonces el único me dice que no, si me dice que no que va a pasar.",
        "start": 675.58,
        "end": 681.58
    },
    {
        "text": " ¿Y el paso?",
        "start": 681.58,
        "end": 682.58
    },
    {
        "text": " Se sale.",
        "start": 682.58,
        "end": 683.58
    },
    {
        "text": " Sale y cuántas veces se hizo S.",
        "start": 683.58,
        "end": 686.58
    },
    {
        "text": " ¿Y el paso?",
        "start": 686.58,
        "end": 687.58
    },
    {
        "text": " Una vez sola.",
        "start": 687.58,
        "end": 688.58
    },
    {
        "text": " ¿Ah?",
        "start": 688.58,
        "end": 689.58
    },
    {
        "text": " Eso en lo que llamamos el caso GORLE.",
        "start": 690.58,
        "end": 692.58
    },
    {
        "text": " En el caso general va a ser una vez S, dos veces S, tres veces S, hasta que en algún momento la condición se va a dejar de cumplir.",
        "start": 692.58,
        "end": 700.58
    },
    {
        "text": " En este esquema que tenemos acá va a ser una vez S, ¿sí?",
        "start": 702.58,
        "end": 706.58
    },
    {
        "text": " Y las restantes veces son las que se van a ejecutar acá dentro.",
        "start": 706.58,
        "end": 710.58
    },
    {
        "text": " ¿Por qué este código nos gusta más que este?",
        "start": 711.58,
        "end": 713.58
    },
    {
        "text": " Es más compacto.",
        "start": 713.58,
        "end": 715.58
    },
    {
        "text": " Fíjense que acá el mismo bloque de instrucciones está repetido dos veces antes del y dentro del y dentro del y.",
        "start": 715.58,
        "end": 724.58
    },
    {
        "text": " ¿Qué pasa en términos de eficiencia?",
        "start": 724.58,
        "end": 727.58
    },
    {
        "text": " En términos de eficiencia son iguales porque van a demorar lo mismo.",
        "start": 727.58,
        "end": 732.58
    },
    {
        "text": " Si este hace tres veces S, este va a hacerlo una vez acá y dos veces adentro.",
        "start": 732.58,
        "end": 739.58
    },
    {
        "text": " O sea que la cantidad de veces que se va a ejecutar va a ser la misma.",
        "start": 739.58,
        "end": 742.58
    },
    {
        "text": " Que se va a hacer a la particularidad del suave, el saliente lo que tiene en la misma.",
        "start": 743.58,
        "end": 746.58
    },
    {
        "text": " Exactamente, acá tenemos un caso donde en términos de eficiencia, perdón, no tenemos diferencia.",
        "start": 746.58,
        "end": 752.58
    },
    {
        "text": " Y lo que hace preferible esta opción es el hecho de que el código te queda más compacto.",
        "start": 752.58,
        "end": 759.58
    },
    {
        "text": " Es una cuestión de si querés elegancia.",
        "start": 759.58,
        "end": 762.58
    },
    {
        "text": " ¿A bien?",
        "start": 762.58,
        "end": 764.58
    },
    {
        "text": " Pero bueno, es importante saber que todo lo que se puede hacer con un repeat también se puede hacer con un wild de esta manera.",
        "start": 764.58,
        "end": 771.58
    },
    {
        "text": " El precio que pagamos es que debemos repetir en dos lugares diferentes el mismo código.",
        "start": 771.58,
        "end": 776.58
    },
    {
        "text": " Por estas razones que vamos a usar la de arriba.",
        "start": 778.58,
        "end": 781.58
    },
    {
        "text": " Siempre que sea seguro que pase que cosa.",
        "start": 781.58,
        "end": 784.58
    },
    {
        "text": " Que se ejecuta el menos una vez.",
        "start": 784.58,
        "end": 786.58
    },
    {
        "text": " Si no tenemos esa seguridad ahí sí vamos a hacer con wild.",
        "start": 786.58,
        "end": 790.58
    },
    {
        "text": " Dentro del repeat yo puedo poner cualquier instrucción, simple o compuesta.",
        "start": 793.58,
        "end": 799.58
    },
    {
        "text": " Esto que habíamos visto de la anidación de estructuras vale cual es que iras en las estructuras.",
        "start": 800.58,
        "end": 806.58
    },
    {
        "text": " Tú puedes mezclar repeat con if o wild con if o repeat con case o dos repeat o dos if o dos wild lo que sea.",
        "start": 806.58,
        "end": 815.58
    },
    {
        "text": " Bueno, vamos a ver un ejemplo en el cual deseamos contar las palabras contenidas en un texto.",
        "start": 819.58,
        "end": 827.58
    },
    {
        "text": " Las palabras están separadas por espacios y el final del texto se señala con un carácter punto.",
        "start": 829.58,
        "end": 837.58
    },
    {
        "text": " Y nos aseguran que el punto está precedido por al menos un espacio.",
        "start": 838.58,
        "end": 843.58
    },
    {
        "text": " Vamos a ver un ejemplo aquí.",
        "start": 845.58,
        "end": 847.58
    },
    {
        "text": " Bien, vamos a tensor e app suena nudoинг de dyre, y tenemos dos espacios en blanco digitales por el usuario.",
        "start": 859.58,
        "end": 878.58
    },
    {
        "text": " por el usuario. Entonces bueno que tenemos 12 espacios en blanco digitados por el usuario.",
        "start": 878.58,
        "end": 885.86
    },
    {
        "text": " Luego el usuario digitó 1h, 1 a, 1 a, luego puso 3 espacios en blanco más. Voy a seguir acá abajo.",
        "start": 889.3000000000001,
        "end": 903.46
    },
    {
        "text": " Luego escribió esto, luego puso no sé, 12 espacios en blanco más y 1 punto. ¿Cuántas palabras hay?",
        "start": 909.46,
        "end": 920.7
    },
    {
        "text": " Dos palabras. Nosotros nos piden hacer un programa que cuente la cantidad de palabras. Es seguro",
        "start": 920.7,
        "end": 930.9000000000001
    },
    {
        "text": " que el punto está precedido por al menos un espacio y es seguro que hay por lo menos un espacio",
        "start": 931.6999999999999,
        "end": 938.8199999999999
    },
    {
        "text": " separando las palabras. Bueno, acá tenemos un esqueleto de lo que sería ese procesamiento. Voy a",
        "start": 938.8199999999999,
        "end": 953.34
    },
    {
        "text": " parar allá. Le harías que tenemos dos constantes, una que representa el espacio blanco y otra que",
        "start": 953.34,
        "end": 963.9
    },
    {
        "text": " representa el punto que marca el fin de la oración y dos variables. Una de tipo char para que",
        "start": 963.9,
        "end": 972.5400000000001
    },
    {
        "text": " seré a sabrirlas de tipo char para contar no. Solo para el espacio. Para ir pasando por los",
        "start": 972.54,
        "end": 986.02
    },
    {
        "text": " caracteres. Yo no los voy a guardar todos, los voy a ir leyendo de a uno. La que me va a llevar",
        "start": 986.02,
        "end": 993.54
    },
    {
        "text": " la cuenta de las palabras es esta parilla. Esa variable que está ahí. La cantidad de palabras.",
        "start": 993.54,
        "end": 998.3
    },
    {
        "text": " Bueno, y esto que tenemos acá es lo que llamamos un pseudo código. O sea, no es el programa completo,",
        "start": 998.9799999999999,
        "end": 1008.74
    },
    {
        "text": " sino que es un esqueleto de lo que luego sería el programa. Es una buena práctica y de hecho",
        "start": 1008.74,
        "end": 1016.2199999999999
    },
    {
        "text": " recomendamos que lo hagan, que conforme los programas se van haciendo cada vez más grandes,",
        "start": 1016.2199999999999,
        "end": 1021.9
    },
    {
        "text": " no traten de ir de una al código, sino que primero traten de armar, un esqueleto, una mezcla de",
        "start": 1022.22,
        "end": 1030.46
    },
    {
        "text": " español con Pascal para por lo menos ir pensando cuál es la idea del algoritmo.",
        "start": 1030.46,
        "end": 1036.5
    },
    {
        "text": " Está bien y después eso se refina y se lleva el código. Bueno, ¿qué estamos haciendo acá?",
        "start": 1037.1,
        "end": 1045.94
    },
    {
        "text": " Inicializando la cantidad de palabras. Inicialmente no tenemos ninguna palabra",
        "start": 1047.94,
        "end": 1053.82
    },
    {
        "text": " contada. Luego aquí vamos a poner el código para avanzar hasta el comienzo de la palabra.",
        "start": 1053.82,
        "end": 1062.02
    },
    {
        "text": " Abansar hasta el comienzo de la palabra que será.",
        "start": 1062.02,
        "end": 1065.9
    },
    {
        "text": " Ir leyendo los espacios en blanco hasta llegar a donde. En este caso, a la H en forma general,",
        "start": 1067.9,
        "end": 1076.78
    },
    {
        "text": " ¿a qué? Un carácter que no sea un espacio. Podría ser el punto. Bien, después mientras",
        "start": 1076.78,
        "end": 1089.5
    },
    {
        "text": " queden palabras y cuál es la manera que yo voy a tener de verificar si quedan palabras.",
        "start": 1089.5,
        "end": 1094.78
    },
    {
        "text": " Que no haya llegado al punto. Bueno, si entro al igual quiere decir que todavía quedan palabras,",
        "start": 1096.62,
        "end": 1103.98
    },
    {
        "text": " leo una palabra que después veremos como queda el código para eso, que esto me va a llevar hasta",
        "start": 1103.98,
        "end": 1110.58
    },
    {
        "text": " donde. Hasta la H en realidad me va a llevar hasta acá. Hasta el siguiente espacio en blanco después",
        "start": 1110.58,
        "end": 1116.22
    },
    {
        "text": " de la. Cuando pase por esto, muestra vieja y querida instrucción de acumulación. ¿Qué hago?",
        "start": 1116.22,
        "end": 1125.58
    },
    {
        "text": " Le sumo uno a la cantidad de palabras. Cuento la palabra que acabo de leer. ¿Estás bien? Y después",
        "start": 1128.18,
        "end": 1135.82
    },
    {
        "text": " avanzar hasta la siguiente palabra. O sea, estoy acá, habrá que hacer qué cosa. Seguir y de nuevo,",
        "start": 1135.82,
        "end": 1144.94
    },
    {
        "text": " hasta que pase qué cosa. Lo mismo encontrará algo que no sea un blanco. ¿Cabien? Bueno, esto se va a",
        "start": 1144.94,
        "end": 1155.8200000000002
    },
    {
        "text": " repetir mientras queden palabras. Una vez que yo salgo de la iteración central, lo que hacemos es",
        "start": 1155.8200000000002,
        "end": 1165.78
    },
    {
        "text": " emitimos el resultado de usuario. Obviamente, yo no estoy almacenando la totalidad de las palabras en",
        "start": 1165.78,
        "end": 1172.02
    },
    {
        "text": " memoria. De hecho, para hacer eso necesitamos ver arreglos que lo vamos a ver más adelante.",
        "start": 1172.02,
        "end": 1177.06
    },
    {
        "text": " Tampoco necesito hacerlo. Me alcanza simplemente con ir leyendo e ir contándolas palabras.",
        "start": 1177.06,
        "end": 1183.5
    },
    {
        "text": " Vamos a ver cómo queda esto un poquito más refinado. Y acá tenemos la versión refinada.",
        "start": 1187.3,
        "end": 1195.26
    },
    {
        "text": " Bueno, inicializar contadores, nuestro único contador es la cantidad de palabras. Vamos a",
        "start": 1195.26,
        "end": 1206.26
    },
    {
        "text": " anotar por acá. Aquí tenemos la cantidad de palabras. ¿Qué arrancanceros? ¿Sí? Cuénteme",
        "start": 1206.26,
        "end": 1226.26
    },
    {
        "text": " qué pasa acá. Avanza hasta el primer carácter que no sea el espacio. Y por qué está",
        "start": 1226.26,
        "end": 1236.06
    },
    {
        "text": " hecho con repeat? La letra que me decía que había al menos no, que había al menos un espacio.",
        "start": 1236.06,
        "end": 1249.1
    },
    {
        "text": " Es seguro que al empezar vamos a tener por lo menos un espacio. Me lo decía la conseguida.",
        "start": 1250.1,
        "end": 1255.06
    },
    {
        "text": " Entonces, como partimos de esa hipótesis de ese dato sabemos que por lo menos va a haber un espacio",
        "start": 1256.06,
        "end": 1262.22
    },
    {
        "text": " blanco es que podemos utilizar repeat para leerlos. Yo sé lo único que hago cada vez que entro",
        "start": 1262.22,
        "end": 1270.3
    },
    {
        "text": " que es. Leo, hago algo con el carácter leído después. No, no me interesa. Simplemente quiero avanzar.",
        "start": 1270.3,
        "end": 1279.1000000000001
    },
    {
        "text": " Entonces vamos a suponer que este es nuestro cursor. Originalmente estamos parados acá.",
        "start": 1281.42,
        "end": 1286.22
    },
    {
        "text": " Entramos al repeat. Leímos este carácter. Este carácter es distinto del espacio. No, es igual",
        "start": 1287.22,
        "end": 1295.22
    },
    {
        "text": " al espacio. Entonces, que tengo que hacer. Entro de vuelta al repeat y leo otro. ¿Y qué pasa?",
        "start": 1295.22,
        "end": 1301.22
    },
    {
        "text": " Sigue siendo el espacio. Entonces, que ocurre. Vuelvo al repeat y leo otro. ¿Y qué pasa?",
        "start": 1301.22,
        "end": 1308.22
    },
    {
        "text": " Ahora es distinto del espacio. Ahora esa condición es como verdadera. Trú, cuándo la condición",
        "start": 1309.22,
        "end": 1317.22
    },
    {
        "text": " es verdadera es que yo salvo del antil. Habiendo salido en la variable carácter.",
        "start": 1317.22,
        "end": 1323.22
    },
    {
        "text": " Si llamaba carácter, sí. ¿Qué quedó? ¿Qué volaste?",
        "start": 1323.22,
        "end": 1329.22
    },
    {
        "text": " Bien, con esto hemos consumido los espacios del principio. Ahora empezamos con el bloque central.",
        "start": 1337.22,
        "end": 1345.22
    },
    {
        "text": " Que se va a prolongar mientras que el carácter sea distinto de fin. Fin era una constante que",
        "start": 1345.22,
        "end": 1352.22
    },
    {
        "text": " representaba cuál el punto. ¿Ve bien? Bueno, sabemos que estamos parados en algo que no es un",
        "start": 1352.22,
        "end": 1360.22
    },
    {
        "text": " blanco. Y resulta que lo que tenemos ahora es la H, con lo cual esta condición es verdadera.",
        "start": 1360.22,
        "end": 1367.22
    },
    {
        "text": " Sí, es verdadera. Porque la H es distinto del punto. Entonces, ¿qué pasa? Entramos. Bien, leer palabra.",
        "start": 1367.22,
        "end": 1378.22
    },
    {
        "text": " Una esquemita muy similar al de arriba, pero que es lo que cambia. Ahora paramos cuando llegamos a leer",
        "start": 1378.22,
        "end": 1386.22
    },
    {
        "text": " un carácter que es igual al espacio. Es decir, que yo me voy a mantener dentro de este repeat en tanto",
        "start": 1386.22,
        "end": 1394.22
    },
    {
        "text": " pase que cosa. No sé, un espacio. Entonces, yo ya estaba parado acá en la H, ¿qué hago ahora? ¿Cuál leo?",
        "start": 1394.22,
        "end": 1405.22
    },
    {
        "text": " La O. ¿Es el espacio? Si o no. No. Entonces, ¿qué hago? Entro de vuelta al repeat y leo la L. ¿Es el espacio?",
        "start": 1405.22,
        "end": 1416.22
    },
    {
        "text": " Entro de vuelta y leo la A. ¿Es el espacio? Entro de vuelta y leo esto. ¿Es el espacio? Sí.",
        "start": 1416.22,
        "end": 1424.22
    },
    {
        "text": " En este momento salvo del repeat. Y acá en la variable carácter que me quedó.",
        "start": 1424.22,
        "end": 1430.22
    },
    {
        "text": " El espacio. ¿Sabía bien? Fíjense que este repeat está anidado dentro de un Y.",
        "start": 1430.22,
        "end": 1442.22
    },
    {
        "text": " Acá tenemos nuevamente un ejemplo de anidación de diferentes estructuras de control.",
        "start": 1442.22,
        "end": 1448.22
    },
    {
        "text": " Para este problema me sirvió combinar Y con repeat. Para otro problema distinto me servirá",
        "start": 1448.22,
        "end": 1455.22
    },
    {
        "text": " combinar no sé, for con case. Las maneras de anidar estructuras son múltiples muy variadas y bueno",
        "start": 1455.22,
        "end": 1465.22
    },
    {
        "text": " uno tiene que elegir la combinación adecuada siempre en función del problema que quiera resolver.",
        "start": 1465.22,
        "end": 1472.22
    },
    {
        "text": " Bueno, en este momento estamos parados donde? En cual de todos? En el que está después de la A.",
        "start": 1472.22,
        "end": 1481.22
    },
    {
        "text": " Esto significa que acabamos de terminar con la primera palabra.",
        "start": 1482.22,
        "end": 1486.22
    },
    {
        "text": " Nuestra instrucción favorita cuenta, como toda asignación de derecha izquierda ¿verdad?",
        "start": 1486.22,
        "end": 1494.22
    },
    {
        "text": " Cantidad palabra es le sumo 1, eso me da 1 y el resultado va a parar a la misma variable.",
        "start": 1494.22,
        "end": 1502.22
    },
    {
        "text": " Eso es lo que logra la magia de la acumulación.",
        "start": 1502.22,
        "end": 1505.22
    },
    {
        "text": " Ya que era la cantidad de palabras, deja de ser cero y pasa cero uno.",
        "start": 1506.22,
        "end": 1512.22
    },
    {
        "text": " Está bien? Bien. Y bueno, y después que pasa acá?",
        "start": 1512.22,
        "end": 1519.22
    },
    {
        "text": " Seguimos otra secuencia de lecturas hasta llegar a algo que sea como distinto del espacio.",
        "start": 1519.22,
        "end": 1529.22
    },
    {
        "text": " Yo estaba parado acá, entonces hago un rid que voy a leer.",
        "start": 1530.22,
        "end": 1534.22
    },
    {
        "text": " Este carácter que resulta que es un espacio, entonces que hago.",
        "start": 1534.22,
        "end": 1539.22
    },
    {
        "text": " Entro de vuelta al repeat y le otro que sigue siendo el espacio.",
        "start": 1539.22,
        "end": 1543.22
    },
    {
        "text": " Entonces que hago. Entro de vuelta y le otro que es la M y es distinto del espacio.",
        "start": 1543.22,
        "end": 1552.22
    },
    {
        "text": " Salgo de este repeat, pero a dónde vuelvo?",
        "start": 1553.22,
        "end": 1557.22
    },
    {
        "text": " Vuelvo al guay de arriba.",
        "start": 1557.22,
        "end": 1561.22
    },
    {
        "text": " Es decir, hice una vez todo lo que está dentro de vinen.",
        "start": 1563.22,
        "end": 1568.22
    },
    {
        "text": " Lo que está dentro de vinen es un bloque de repeat, una acumulación y otro bloque de repeat.",
        "start": 1568.22,
        "end": 1575.22
    },
    {
        "text": " Todo esto se acaba de hacer una vez.",
        "start": 1575.22,
        "end": 1580.22
    },
    {
        "text": " Entiende? Volvemos ahora al guay. Carácter es distinto de fin?",
        "start": 1580.22,
        "end": 1586.22
    },
    {
        "text": " Sí, porque es la M. La M que habíamos llegado tras el último repeat.",
        "start": 1586.22,
        "end": 1593.22
    },
    {
        "text": " Entonces, entro y leemos la palabra. Vamos a hacer lecturas hasta que el carácter sea como.",
        "start": 1593.22,
        "end": 1601.22
    },
    {
        "text": " Igual el espacio, bueno. Eso me va a hacer leer la U, luego la N, luego la D, luego la O.",
        "start": 1601.22,
        "end": 1608.22
    },
    {
        "text": " O sea cada vez que entro leo uno hasta que me llegara acá.",
        "start": 1608.22,
        "end": 1614.22
    },
    {
        "text": " Y este es un espacio. Entonces que va a pasar con este repeat antil.",
        "start": 1614.22,
        "end": 1619.22
    },
    {
        "text": " Termina. Pasamos nuevamente a la acumulación.",
        "start": 1619.22,
        "end": 1625.22
    },
    {
        "text": " Ahora la cantidad de palabras pasa a ser dos.",
        "start": 1625.22,
        "end": 1631.22
    },
    {
        "text": " Se acaba de ejecutar esto y ejecutamos este otro repeat.",
        "start": 1631.22,
        "end": 1637.22
    },
    {
        "text": " Que va a ir leyendo hasta donde? Hasta llegar a algo que sea distinto del espacio, que en este caso valer acá, valer acá y acá que va a pasar.",
        "start": 1637.22,
        "end": 1649.22
    },
    {
        "text": " Va a ser el punto y el punto es distinto del espacio.",
        "start": 1649.22,
        "end": 1653.22
    },
    {
        "text": " Pero cuidado que esto no termina acá. Porque acá que va a ser vuelve al guay.",
        "start": 1653.22,
        "end": 1660.22
    },
    {
        "text": " Y pregunta si el carácter es distinto de fin y ahí le da que no, que distinto no es que es igual.",
        "start": 1660.22,
        "end": 1667.22
    },
    {
        "text": " Y ahí recién es que sale del guay. La cuárdense del guay yo pregunto por última vez la condición y ahí es que no fue.",
        "start": 1667.22,
        "end": 1677.22
    },
    {
        "text": " ¿Se entendió? Luego de esto vendría el mensaje que le muestra el usuario en la cantidad de palabras.",
        "start": 1677.22,
        "end": 1687.22
    },
    {
        "text": " ¿Ok? ¿Se entendió este ejemplo? Bueno acá tenemos un lindo ejemplo que combina las dos últimas estructuras que vimos.",
        "start": 1688.22,
        "end": 1699.22
    },
    {
        "text": " Pero recordemos no solamente se puede combinar guay y con repeat.",
        "start": 1699.22,
        "end": 1703.22
    },
    {
        "text": " Se puede combinar cualquiera con cualquiera depende de lo que queramos hacer.",
        "start": 1703.22,
        "end": 1708.22
    },
    {
        "text": " ¿Qué pasa? ¿Seguimos la breve punto?",
        "start": 1708.22,
        "end": 1715.22
    },
    {
        "text": " ¿Sería otro problema? Diferente con otras hipótesis y el código cambiaría. ¿Está bien?",
        "start": 1715.22,
        "end": 1724.22
    },
    {
        "text": " ¿Comañelo pronto? ¿Qué pasa si después de la palabra pudiera venir media también del punto?",
        "start": 1724.22,
        "end": 1730.22
    },
    {
        "text": " Ahí sería otro, exactamente sería otro problema con otras hipótesis. ¿Ata acá?",
        "start": 1730.22,
        "end": 1739.22
    },
    {
        "text": " Bueno vamos a echar un poquito el práctico.",
        "start": 1740.22,
        "end": 1743.22
    },
    {
        "text": " ¿Estás correctado que te da el vídeo? Sí sí, es eso.",
        "start": 1753.22,
        "end": 1757.22
    },
    {
        "text": " Sí.",
        "start": 1761.22,
        "end": 1762.22
    },
    {
        "text": " ¿Vale a ver la palabra nocteta?",
        "start": 1762.22,
        "end": 1764.22
    },
    {
        "text": " ¿Vos decís almacenándola?",
        "start": 1767.22,
        "end": 1769.22
    },
    {
        "text": " No, sea. ¿Ves que para la sola? Sí.",
        "start": 1769.22,
        "end": 1774.22
    },
    {
        "text": " Y va a declare esta pobreza.",
        "start": 1776.22,
        "end": 1779.22
    },
    {
        "text": " Todavía no. De momento tenemos que leer los caracteres un buro.",
        "start": 1779.22,
        "end": 1784.22
    },
    {
        "text": " Si hay alguna instrucción que ya te le da toda la cadena de caracteres, si la hay pero de momento no contamos con ella.",
        "start": 1784.22,
        "end": 1790.22
    },
    {
        "text": " Bueno.",
        "start": 1792.22,
        "end": 1798.22
    },
    {
        "text": " Vamos a echar un poquito el ejercicio 2.",
        "start": 1803.22,
        "end": 1806.22
    },
    {
        "text": " Concretamente las dos partes. La A y la B. ¿Qué es para jugar un poquito con repeat?",
        "start": 1806.22,
        "end": 1813.22
    },
    {
        "text": " Tomense 5 minutos, lo hacen lo discutimos y expropasamos ejercicios de código.",
        "start": 1813.22,
        "end": 1819.22
    },
    {
        "text": " Bueno.",
        "start": 1820.22,
        "end": 1821.22
    },
    {
        "text": " Determinar el valor que se exibe en la salida, alejecutar los siguientes fragmentos de código con repeat.",
        "start": 1822.22,
        "end": 1828.22
    },
    {
        "text": " Empezamos con los variables A y B.",
        "start": 1831.22,
        "end": 1834.22
    },
    {
        "text": " Con los valores 6 y 5.",
        "start": 1840.22,
        "end": 1842.22
    },
    {
        "text": " Bien.",
        "start": 1843.22,
        "end": 1846.22
    },
    {
        "text": " Se inicializaron estas dos. Entramos al repeat y está bien decir, entramos por qué?",
        "start": 1848.22,
        "end": 1854.22
    },
    {
        "text": " Porque siempre entra.",
        "start": 1854.22,
        "end": 1857.22
    },
    {
        "text": " A le asigno a mas uno.",
        "start": 1857.22,
        "end": 1860.22
    },
    {
        "text": " ¿Qué es a 7?",
        "start": 1860.22,
        "end": 1862.22
    },
    {
        "text": " Queda 7. O sea, queda deja de volar 6 y ahora pasa a valer 7.",
        "start": 1862.22,
        "end": 1868.22
    },
    {
        "text": " Repetir esto hasta que A sea mayor que B.",
        "start": 1869.22,
        "end": 1873.22
    },
    {
        "text": " ¿Listo?",
        "start": 1873.22,
        "end": 1874.22
    },
    {
        "text": " A ya es mayor que B.",
        "start": 1875.22,
        "end": 1877.22
    },
    {
        "text": " En realidad ya era mayor que B.",
        "start": 1877.22,
        "end": 1879.22
    },
    {
        "text": " Pero bueno, lo sigue siendo luego de sumarle 1 a...",
        "start": 1879.22,
        "end": 1883.22
    },
    {
        "text": " Por lo tanto, ¿qué pasa?",
        "start": 1883.22,
        "end": 1885.22
    },
    {
        "text": " Taa. Termina el antil muestro el valor de A que va a ser 7.",
        "start": 1886.22,
        "end": 1892.22
    },
    {
        "text": " En pantalla esto va a mostrar un 7.",
        "start": 1892.22,
        "end": 1895.22
    },
    {
        "text": " ¿Cuántas veces se ejecutó?",
        "start": 1896.22,
        "end": 1898.22
    },
    {
        "text": " Una vez sol es decir, la mínima cantidad de veces que podía llegar a ejecutarse.",
        "start": 1898.22,
        "end": 1904.22
    },
    {
        "text": " Bien.",
        "start": 1907.22,
        "end": 1909.22
    },
    {
        "text": " Segue la salida es 7.",
        "start": 1909.22,
        "end": 1911.22
    },
    {
        "text": " Correcto. ¿Por qué?",
        "start": 1913.22,
        "end": 1915.22
    },
    {
        "text": " Acá dice por qué.",
        "start": 1916.22,
        "end": 1918.22
    },
    {
        "text": " ¿Al menos entra una vez y en este caso qué pasó?",
        "start": 1918.22,
        "end": 1924.22
    },
    {
        "text": " Una vez.",
        "start": 1925.22,
        "end": 1927.22
    },
    {
        "text": " ¿Entro una vez?",
        "start": 1927.22,
        "end": 1929.22
    },
    {
        "text": " Taa, como la condición era más...",
        "start": 1929.22,
        "end": 1932.22
    },
    {
        "text": " Y como la condición era...",
        "start": 1932.22,
        "end": 1934.22
    },
    {
        "text": " O sea, la primera vez que preguntamos por la condición qué pasó.",
        "start": 1934.22,
        "end": 1939.22
    },
    {
        "text": " Ya era verdadera.",
        "start": 1939.22,
        "end": 1941.22
    },
    {
        "text": " Por eso es que paró ahí.",
        "start": 1941.22,
        "end": 1944.22
    },
    {
        "text": " ¿Verdad?",
        "start": 1944.22,
        "end": 1946.22
    },
    {
        "text": " Pero una vez si o si tuvo que pasarlo.",
        "start": 1946.22,
        "end": 1949.22
    },
    {
        "text": " No sabía que ahora venía con por qué la respuesta.",
        "start": 1949.22,
        "end": 1953.22
    },
    {
        "text": " Bien.",
        "start": 1953.22,
        "end": 1955.22
    },
    {
        "text": " Eso fue Luis Ocilvia seguro.",
        "start": 1955.22,
        "end": 1958.22
    },
    {
        "text": " Bueno, déjame seguir.",
        "start": 1958.22,
        "end": 1961.22
    },
    {
        "text": " ¿Por qué? ¿Por qué no me diste tiempo atinpear? Por eso.",
        "start": 1963.22,
        "end": 1968.22
    },
    {
        "text": " Bien.",
        "start": 1968.22,
        "end": 1971.22
    },
    {
        "text": " No les va a pasar con el flipascal.",
        "start": 1971.22,
        "end": 1974.22
    },
    {
        "text": " En el flipascal, ustedes escriben el comando para compilar y te compila.",
        "start": 1974.22,
        "end": 1978.22
    },
    {
        "text": " Pero existen otros compiladores,",
        "start": 1978.22,
        "end": 1981.22
    },
    {
        "text": " sobre todo de otros lenguajes de programación,",
        "start": 1981.22,
        "end": 1984.22
    },
    {
        "text": " que a medida que estás escribiendo el código fuente,",
        "start": 1984.22,
        "end": 1988.22
    },
    {
        "text": " ya te están compilando.",
        "start": 1988.22,
        "end": 1991.22
    },
    {
        "text": " Entonces, cuando uno recién arranca,",
        "start": 1991.22,
        "end": 1994.22
    },
    {
        "text": " y bueno, puede ser bastante molesto eso.",
        "start": 1994.22,
        "end": 1997.22
    },
    {
        "text": " Porque no te dio tiempo a terminar describir la primera instrucción",
        "start": 1997.22,
        "end": 2001.22
    },
    {
        "text": " que ya te está diciendo de todos.",
        "start": 2001.22,
        "end": 2003.22
    },
    {
        "text": " Déjame terminar describir.",
        "start": 2003.22,
        "end": 2005.22
    },
    {
        "text": " Por suerte, no nos va a pasar eso con flipascal.",
        "start": 2005.22,
        "end": 2008.22
    },
    {
        "text": " Bueno, ven.",
        "start": 2008.22,
        "end": 2010.22
    },
    {
        "text": " Empezamos con la variable I en cero.",
        "start": 2010.22,
        "end": 2013.22
    },
    {
        "text": " La variable I con valor inicial cero.",
        "start": 2013.22,
        "end": 2018.22
    },
    {
        "text": " Repeat, o sea que entramos.",
        "start": 2018.22,
        "end": 2023.22
    },
    {
        "text": " Mostramos en pantalla primitivo.",
        "start": 2023.22,
        "end": 2026.22
    },
    {
        "text": " O sea, hasta que I sea igual a cero.",
        "start": 2026.22,
        "end": 2036.22
    },
    {
        "text": " ¿Se cumple que sí igual a cero?",
        "start": 2036.22,
        "end": 2039.22
    },
    {
        "text": " Entonces, ¿qué pasa?",
        "start": 2039.22,
        "end": 2041.22
    },
    {
        "text": " Termina I. ¿Cuántas veces ejecutó este repeat?",
        "start": 2041.22,
        "end": 2045.22
    },
    {
        "text": " Una vez sola.",
        "start": 2045.22,
        "end": 2048.2200000000003
    },
    {
        "text": " Ya la primera vez que se evaluó la condición,",
        "start": 2048.2200000000003,
        "end": 2052.2200000000003
    },
    {
        "text": " ya era verdadera, y pasó lo mismo que pasó en el ejemplo anterior.",
        "start": 2052.2200000000003,
        "end": 2056.2200000000003
    },
    {
        "text": " Mostró el cartel primitivo.",
        "start": 2056.2200000000003,
        "end": 2059.2200000000003
    },
    {
        "text": " ¿Ah?",
        "start": 2059.2200000000003,
        "end": 2061.2200000000003
    },
    {
        "text": " La pregunta que me iba a nacer.",
        "start": 2061.2200000000003,
        "end": 2063.2200000000003
    },
    {
        "text": " Si, ahí voy a hacer igual 1 o sea, va para llamar a la pítqueda.",
        "start": 2063.2200000000003,
        "end": 2066.2200000000003
    },
    {
        "text": " Bueno,",
        "start": 2066.2200000000003,
        "end": 2068.2200000000003
    },
    {
        "text": " es justamente lo que vamos a ver ahora. ¿Qué pasa 100 veces de igual?",
        "start": 2068.22,
        "end": 2071.22
    },
    {
        "text": " Bueno, no verificar primero esto.",
        "start": 2071.22,
        "end": 2076.22
    },
    {
        "text": " Correcto, ¿por qué? Bueno, ya lo dijimos.",
        "start": 2076.22,
        "end": 2078.22
    },
    {
        "text": " Gracias.",
        "start": 2078.22,
        "end": 2081.22
    },
    {
        "text": " Hacer esto es caminar al borde de un precipicio.",
        "start": 2081.22,
        "end": 2087.22
    },
    {
        "text": " Imaginate que, como dice el compañero sin querer,",
        "start": 2087.22,
        "end": 2090.22
    },
    {
        "text": " en vez de cero a caponía 1.",
        "start": 2090.22,
        "end": 2094.22
    },
    {
        "text": " Es más, vamos a imaginarnos que en la condición pusimos igual a 1.",
        "start": 2094.22,
        "end": 2099.22
    },
    {
        "text": " Entonces, empezamos de vuelta. Iba al cero. Primitivo.",
        "start": 2099.22,
        "end": 2103.22
    },
    {
        "text": " O sea, se muestra una vez en pantalla primitivo.",
        "start": 2103.22,
        "end": 2106.22
    },
    {
        "text": " I es igual a 1.",
        "start": 2106.22,
        "end": 2108.22
    },
    {
        "text": " Vuelvo al repeat y ¿qué pasa? Primitivo.",
        "start": 2108.22,
        "end": 2111.22
    },
    {
        "text": " Otra vez. I es igual a 1.",
        "start": 2111.22,
        "end": 2114.22
    },
    {
        "text": " No, ¿qué pasa? Vuelvo al repeat. Primitivo.",
        "start": 2114.22,
        "end": 2118.22
    },
    {
        "text": " ¿Qué de? ¿En qué?",
        "start": 2118.22,
        "end": 2120.22
    },
    {
        "text": " En un loop infinito.",
        "start": 2120.22,
        "end": 2122.22
    },
    {
        "text": " Porque no estamos haciendo nada dentro del repeat que altere que cosa.",
        "start": 2122.22,
        "end": 2127.22
    },
    {
        "text": " ¿Qué altere?",
        "start": 2127.22,
        "end": 2128.22
    },
    {
        "text": " Que altere la variable I.",
        "start": 2128.22,
        "end": 2131.22
    },
    {
        "text": " Esto es un ejemplo de código que, si yo acalibir a puesto 1, 1.",
        "start": 2131.22,
        "end": 2135.22
    },
    {
        "text": " El compilador te lo compila bien.",
        "start": 2135.22,
        "end": 2139.22
    },
    {
        "text": " Pero te vas a dar cuenta en la ejecución,",
        "start": 2139.22,
        "end": 2142.22
    },
    {
        "text": " cuando en la pantalla te empieza a parecer una chorreira de primitivos",
        "start": 2142.22,
        "end": 2145.22
    },
    {
        "text": " que no terminan más.",
        "start": 2145.22,
        "end": 2148.22
    },
    {
        "text": " ¿Por qué? Porque no estamos haciendo nada dentro del repeat antil",
        "start": 2148.22,
        "end": 2153.22
    },
    {
        "text": " que modifique el valor de la variable I.",
        "start": 2153.22,
        "end": 2156.22
    },
    {
        "text": " ¿Qué pasa?",
        "start": 2156.22,
        "end": 2158.22
    },
    {
        "text": " Así, ¿cuindos quieres que lo active?",
        "start": 2158.22,
        "end": 2161.22
    },
    {
        "text": " ¿Qué queda ahí?",
        "start": 2161.22,
        "end": 2165.22
    },
    {
        "text": " Así que, mucho cuidado con construir programas de esta manera.",
        "start": 2165.22,
        "end": 2170.22
    },
    {
        "text": " Ustedes siempre que programen tienen que asegurarse",
        "start": 2170.22,
        "end": 2175.22
    },
    {
        "text": " de que en algún momento la condición del antil se haga como.",
        "start": 2175.22,
        "end": 2180.22
    },
    {
        "text": " Se haga verdadera.",
        "start": 2180.22,
        "end": 2182.22
    },
    {
        "text": " Y si es un wild que en algún momento la condición se haga, falsa.",
        "start": 2182.22,
        "end": 2186.22
    },
    {
        "text": " Pero eso no va a pasar de manera mágica.",
        "start": 2186.22,
        "end": 2189.22
    },
    {
        "text": " Eso va a pasar si uno dentro del cuerpo de la iteración",
        "start": 2189.22,
        "end": 2194.22
    },
    {
        "text": " hace algo para que la cosa cambia.",
        "start": 2194.22,
        "end": 2198.22
    },
    {
        "text": " ¿Sabía?",
        "start": 2198.22,
        "end": 2200.22
    },
    {
        "text": " ¿Sí?",
        "start": 2200.22,
        "end": 2202.22
    },
    {
        "text": " ¿Más preguntas de este ejemplo?",
        "start": 2202.22,
        "end": 2205.22
    },
    {
        "text": " Bueno, y ahora vamos a pasar a un lindo ejercicio, pero dale con...",
        "start": 2205.22,
        "end": 2211.22
    },
    {
        "text": " Gracias por hacernos reflexionar práctico 5.",
        "start": 2211.22,
        "end": 2215.22
    },
    {
        "text": " Acá este.",
        "start": 2215.22,
        "end": 2218.22
    },
    {
        "text": " Este está bueno.",
        "start": 2218.22,
        "end": 2220.22
    },
    {
        "text": " Bueno, se van a tomar un rato, una media hora, 20 minutos por ahí,",
        "start": 2220.22,
        "end": 2224.22
    },
    {
        "text": " para hacer el ejercicio de 10.",
        "start": 2224.22,
        "end": 2228.22
    },
    {
        "text": " Y la mecánica va a ser la de siempre.",
        "start": 2228.22,
        "end": 2230.22
    },
    {
        "text": " Yo voy pasando, me van mostrando, me van preguntando de este o del que quieran.",
        "start": 2230.22,
        "end": 2235.22
    },
    {
        "text": " Volvo a repetir lo mismo que les digo todas las clases.",
        "start": 2235.22,
        "end": 2239.22
    },
    {
        "text": " En clase nos da para cuántos ejercicios.",
        "start": 2239.22,
        "end": 2242.22
    },
    {
        "text": " 2, 3 como mucho.",
        "start": 2242.22,
        "end": 2245.22
    },
    {
        "text": " Cuántos ejercicios tienen cada práctico?",
        "start": 2245.22,
        "end": 2248.22
    },
    {
        "text": " 12, 13, 14, 15.",
        "start": 2248.22,
        "end": 2251.22
    },
    {
        "text": " Todos esos les quedan para hacer a ustedes en casa.",
        "start": 2251.22,
        "end": 2255.22
    },
    {
        "text": " Durante las rondas de preguntas, me pueden preguntar de esos ejercicios.",
        "start": 2255.22,
        "end": 2259.22
    },
    {
        "text": " Es importante hacer mucho ejercicio de práctico.",
        "start": 2259.22,
        "end": 2262.22
    },
    {
        "text": " Bueno, realice las funciones de una calculadora simple.",
        "start": 2262.22,
        "end": 2267.22
    },
    {
        "text": " Los datos de entrada, pero caramba.",
        "start": 2267.22,
        "end": 2271.22
    },
    {
        "text": " Hay Dios.",
        "start": 2271.22,
        "end": 2274.22
    },
    {
        "text": " Te remoto.",
        "start": 2274.22,
        "end": 2277.22
    },
    {
        "text": " Hay.",
        "start": 2277.22,
        "end": 2280.22
    },
    {
        "text": " Los datos de entrada serán un rato de entrada.",
        "start": 2280.22,
        "end": 2284.22
    },
    {
        "text": " Hay.",
        "start": 2285.22,
        "end": 2287.22
    },
    {
        "text": " Los datos de entrada serán una secuencia de dígitos decimales y los operadores más por división y menos.",
        "start": 2287.22,
        "end": 2298.22
    },
    {
        "text": " Seída de un signo de igual.",
        "start": 2298.22,
        "end": 2302.22
    },
    {
        "text": " Haga caso miso de los espacios en blanco.",
        "start": 2302.22,
        "end": 2305.22
    },
    {
        "text": " Vamos a suponer para hacerle un incluso más fácil que no hay espacios en blanco.",
        "start": 2305.22,
        "end": 2311.22
    },
    {
        "text": " ¿Qué pongo?",
        "start": 2312.22,
        "end": 2314.22
    },
    {
        "text": " Un número pegadito, un operador pegadito otro número pegadito otro operador.",
        "start": 2314.22,
        "end": 2320.22
    },
    {
        "text": " Vamos adelante, vamos a hacer otra versión suponiendo que hay como en el ejemplo de hoy varios espacios en blanco que podríamos pasarlos por alto.",
        "start": 2320.22,
        "end": 2328.22
    },
    {
        "text": " Pero la primera versión sin espacios en blanco.",
        "start": 2328.22,
        "end": 2332.22
    },
    {
        "text": " Entonces, los operadores se aplican en el orden en que aparecen en los datos de entrada.",
        "start": 2333.22,
        "end": 2338.22
    },
    {
        "text": " O sea, no estamos haciendo caso en ninguno de las presidencias. ¿Se acuerdan de lo que son las presidencias?",
        "start": 2338.22,
        "end": 2345.22
    },
    {
        "text": " Sí.",
        "start": 2345.22,
        "end": 2347.22
    },
    {
        "text": " Los que se paran términos, los que no se paran términos, los más fuerte, los más débil, bueno.",
        "start": 2347.22,
        "end": 2351.22
    },
    {
        "text": " Acá no.",
        "start": 2351.22,
        "end": 2353.22
    },
    {
        "text": " Acá se va aplicando así como viene.",
        "start": 2353.22,
        "end": 2356.22
    },
    {
        "text": " Los operadores se aplican en el orden en que aparecen en los datos de entrada y producen resultados siempre enteros. O sea, nos vamos a manejar exclusivamente en el maravilloso mundo de los intes.",
        "start": 2357.22,
        "end": 2372.22
    },
    {
        "text": " Y no nos vamos a ir en ningún momento hacia el feo mundo de quienes, de los reales. ¿Y cuáles son las operaciones que nos llevan a ese feo mundo?",
        "start": 2372.22,
        "end": 2384.22
    },
    {
        "text": " El trunk, el round, el escueda ruto, ¿as esas? No.",
        "start": 2385.22,
        "end": 2391.22
    },
    {
        "text": " Si bien el usuario va a escribir esto, nosotros vamos a usar div en el programa. O sea, queremos que el comportamiento sea el división entera.",
        "start": 2391.22,
        "end": 2401.22
    },
    {
        "text": " Y lo pasa que siempre te va a ingresar uno después de cada operador.",
        "start": 2407.22,
        "end": 2410.22
    },
    {
        "text": " Entonces, cuando ustedes se encuentren esto, lo que tiene que hacer el programa es div, división entera.",
        "start": 2411.22,
        "end": 2418.22
    },
    {
        "text": " No, el usuario te va a escribir una secuencia que va a estar formada por número, operador, numerador, numerador, numerador igual enter.",
        "start": 2421.22,
        "end": 2430.22
    },
    {
        "text": " Pero si siempre lo tenés largo, pues a más.",
        "start": 2430.22,
        "end": 2432.22
    },
    {
        "text": " Puede ser de cualquier largo.",
        "start": 2432.22,
        "end": 2434.22
    },
    {
        "text": " Asumimos que cada vez que leamos esto es div, a ver, los operadores que pueden ingresar el usuario son cuatro.",
        "start": 2435.22,
        "end": 2445.22
    },
    {
        "text": " El más, el menos, el por o el dividido. Cuando ingres al dividido, nosotros vamos a interpretarlo como div.",
        "start": 2445.22,
        "end": 2453.22
    },
    {
        "text": " Entonces, vamos a mirar este ejemplo de acá.",
        "start": 2455.22,
        "end": 2457.22
    },
    {
        "text": " El usuario va a escribir todo esto, div, div, div, div, div, div, y va a dar enter.",
        "start": 2458.22,
        "end": 2463.22
    },
    {
        "text": " Y ahí nuestro programa empieza.",
        "start": 2464.22,
        "end": 2466.22
    },
    {
        "text": " Y empieza leyendo desde el principio, ¿qué es lo primero que va a leer?",
        "start": 2467.22,
        "end": 2470.22
    },
    {
        "text": " Cuatro.",
        "start": 2470.22,
        "end": 2471.22
    },
    {
        "text": " Entonces, se va a quedar con ese cuatro guardado.",
        "start": 2472.22,
        "end": 2474.22
    },
    {
        "text": " Después viene un más.",
        "start": 2474.22,
        "end": 2476.22
    },
    {
        "text": " Eso significa que la operación a realizar va a ser una suma.",
        "start": 2476.22,
        "end": 2479.22
    },
    {
        "text": " Entonces, va a ser más tres, y eso cuándo da.",
        "start": 2479.22,
        "end": 2482.22
    },
    {
        "text": " Siete, ese siete, se lo va a guardar y luego va a ser dividido dos.",
        "start": 2483.22,
        "end": 2490.22
    },
    {
        "text": " Y siete divididos en división entera cuándo da.",
        "start": 2491.22,
        "end": 2495.22
    },
    {
        "text": " Tres.",
        "start": 2495.22,
        "end": 2496.22
    },
    {
        "text": " No tres con cinco, tres.",
        "start": 2497.22,
        "end": 2499.22
    },
    {
        "text": " Y después ese tres, por ocho, que va a ser.",
        "start": 2499.22,
        "end": 2502.22
    },
    {
        "text": " 24.",
        "start": 2503.22,
        "end": 2504.22
    },
    {
        "text": " Y ese 24, menos cuatro que va a ser.",
        "start": 2505.22,
        "end": 2507.22
    },
    {
        "text": " 20 y es al resultado que provo.",
        "start": 2508.22,
        "end": 2510.22
    },
    {
        "text": " Después, después, si va a poder más tres, ahí lo tengo que volar.",
        "start": 2512.22,
        "end": 2515.22
    },
    {
        "text": " Es y lo guardo.",
        "start": 2515.22,
        "end": 2517.22
    },
    {
        "text": " Y lo guardo.",
        "start": 2518.22,
        "end": 2519.22
    },
    {
        "text": " Entonces, varias cosas a tener en cuenta.",
        "start": 2520.22,
        "end": 2522.22
    },
    {
        "text": " Primero, hay acumulaciones, hay instrucciones de acumulación que vamos a tener que realizar.",
        "start": 2522.22,
        "end": 2526.22
    },
    {
        "text": " Segundo, no sabemos de antemano, ¿sí?",
        "start": 2527.22,
        "end": 2530.22
    },
    {
        "text": " Cuanta superaciones va a querer realizar el usuario.",
        "start": 2532.22,
        "end": 2535.22
    },
    {
        "text": " El mínimo que podría pasar es que te ingrese un número y un igual.",
        "start": 2535.22,
        "end": 2539.22
    },
    {
        "text": " ¿Ela igual termina?",
        "start": 2540.22,
        "end": 2542.22
    },
    {
        "text": " Pon el usuario pone cuatro igual y da enter.",
        "start": 2542.22,
        "end": 2545.22
    },
    {
        "text": " El resultado ahí que tiene que ser.",
        "start": 2545.22,
        "end": 2547.22
    },
    {
        "text": " Cuatro.",
        "start": 2547.22,
        "end": 2548.22
    },
    {
        "text": " O sea, es seguro que un número va a ingresar.",
        "start": 2548.22,
        "end": 2550.22
    },
    {
        "text": " ¿Ve bien?",
        "start": 2552.22,
        "end": 2553.22
    },
    {
        "text": " No te suele moestar con el número y la domina cuando lo rees.",
        "start": 2554.22,
        "end": 2556.22
    },
    {
        "text": " El igual es lo que te dé limita exactamente la finalización.",
        "start": 2556.22,
        "end": 2559.22
    },
    {
        "text": " Sí.",
        "start": 2560.22,
        "end": 2561.22
    },
    {
        "text": " Ya sé más que después la división no puede pasar en la serie.",
        "start": 2561.22,
        "end": 2564.22
    },
    {
        "text": " Asumimos que después de la división no puede poner un 0.",
        "start": 2565.22,
        "end": 2569.22
    },
    {
        "text": " Sí, supongan eso también.",
        "start": 2569.22,
        "end": 2571.22
    },
    {
        "text": " Vamos a una primera versión donde después de la división no hay un 0.",
        "start": 2571.22,
        "end": 2575.22
    },
    {
        "text": " ¿Se entendió?",
        "start": 2578.22,
        "end": 2579.22
    },
    {
        "text": " ¿Cómo es un ratito? ¿Piense en lo?",
        "start": 2580.22,
        "end": 2582.22
    },
    {
        "text": " Armen un seudo código primero.",
        "start": 2582.22,
        "end": 2584.22
    },
    {
        "text": " ¿Sí?",
        "start": 2584.22,
        "end": 2585.22
    },
    {
        "text": " ¿No hay un orden para un superador?",
        "start": 2585.22,
        "end": 2588.22
    },
    {
        "text": " No, no hay un orden.",
        "start": 2588.22,
        "end": 2589.22
    },
    {
        "text": " Puede poner primero un por, después un dir, después un más.",
        "start": 2589.22,
        "end": 2592.22
    },
    {
        "text": " Te puedo pasar cualquier operador.",
        "start": 2592.22,
        "end": 2594.22
    },
    {
        "text": " Ustedes tienen que discutir a ver cuál de los operadores es.",
        "start": 2594.22,
        "end": 2597.22
    },
    {
        "text": " Los operadores les conviene leerlos como variables de tipo que.",
        "start": 2599.22,
        "end": 2603.22
    },
    {
        "text": " De tipo char y los números como variables de tipo intaya.",
        "start": 2603.22,
        "end": 2608.22
    },
    {
        "text": " ¿Sí?",
        "start": 2609.22,
        "end": 2610.22
    },
    {
        "text": " ¿Entero con así frados?",
        "start": 2610.22,
        "end": 2612.22
    },
    {
        "text": " No, podrían ser de varias cifras, pero cuando vos lees un intaya,",
        "start": 2612.22,
        "end": 2615.22
    },
    {
        "text": " te va a leer el entero completo.",
        "start": 2615.22,
        "end": 2617.22
    },
    {
        "text": " Bueno, para trabajar.",
        "start": 2617.22,
        "end": 2622.22
    }
]